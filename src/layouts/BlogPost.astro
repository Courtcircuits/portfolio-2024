---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import LinkTable from '../components/LinkTable.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;

const collection = (await getCollection('blog')).filter((post) => post.data.title !== title);
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		
	</head>

	<body>
		<main>
		<Header />
			<article class="mt-[50px]">
				<div class="prose">
          <div>
					<div class="title flex-row flex w-full justify-between">
            <h1 class="m-0 p-0 w-3/4">{title}</h1>
						<div>
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
            
					</div>
          {
              tags && (
                <div class="tags">
                  {
                    tags.map((tag) => (
                    <span class="tag"><p class="text-accent font-mono m-0 mb-0 p-0 h-fit"># </p>{tag}</span>
                    ))
                  }
                </div>
              )
            }
          </div>
					<slot />
				</div>
			</article>


      <LinkTable title="OTHER ARTICLES" items={collection.map(({data, slug})=>(
                 {
                    name: data.title,
                 to: `/articles/${slug}`,
                    description: data.description
                 }))}/>

		<Footer />
		</main>
	</body>
</html>
